---
import { getImagesFromFolders } from "../utils/readImages";
import { cn } from "../utils/cn";

const { section } = Astro.props;
const images = getImagesFromFolders("/public/" + section?.folderPath);
---

<section
  id={`${section?.id || ""}`}
  class={cn(section?.noMarginTop ? "pt-0" : "pt-16 sm:pt-24 md:pt-32")}
>
  {
    section?.mode === 1 && (
      <div style={`background-color:${section?.bgColor}`}>
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
          <div class="mx-auto max-w-2xl">
            <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl text-center">
              {section?.title?.map((line: string, index: number) => (
                <Fragment key={index}>
                  <span class="block leading-16">{line}</span>
                </Fragment>
              ))}
            </h2>

            {section?.description?.map((info: string, index: number) => (
              <Fragment key={index}>
                <p class="mt-4 text-lg leading-8 text-gray-600 text-center">
                  {info}
                </p>
              </Fragment>
            ))}
          </div>

          <div class="mx-auto mt-16 grid max-w-2xl auto-rows-fr grid-cols-1 gap-16 sm:mt-20 lg:mx-0 lg:max-w-none lg:grid-cols-3 text-center">
            {images?.map((item, index) => (
              <Fragment key={index}>
                <div>
                  <div class="relative isolate flex flex-col justify-end overflow-hidden rounded-2xl bg-gray-900 px-8 pb-8 pt-80 sm:pt-48 lg:pt-80">
                    <img
                      src={item?.src?.replace("/public", "")}
                      alt={item?.name}
                      class="absolute inset-0 -z-10 h-full w-full object-cover"
                      loading="lazy"
                    />
                  </div>
                  {section?.showImgName ? (
                    <h3
                      class="mt-3 text-lg leading-6 text-shadow-all shadow-gray-100"
                      style={`color: ${section?.imgNameColor}`}
                    >
                      <span class="text-center">
                        <span class="absolute inset-0" />
                        {item?.name.split("_").map((part, index) => (
                          <span>
                            {part}
                            {index < item?.name.split("_").length - 2 && <br />}
                          </span>
                        ))}
                      </span>
                    </h3>
                  ) : (
                    ""
                  )}
                </div>
              </Fragment>
            ))}
          </div>
        </div>
      </div>
    )
  }

  {
    section?.mode === 2 && (
      <div style={`background-color:${section?.bgColor}`}>
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
          <div class="mx-auto max-w-2xl">
            <h2
              class="text-3xl font-bold tracking-tight sm:text-4xl text-center"
              style={`color: ${section?.tetleColor}`}
            >
              {section?.title?.map((line: string, index: number) => (
                <Fragment key={index}>
                  <span class="block leading-16">{line}</span>
                </Fragment>
              ))}
            </h2>

            {section?.description?.map((info: string, index: number) => (
              <Fragment key={index}>
                <p class="mt-4 text-lg leading-8 text-gray-400 text-center">
                  {info}
                </p>
              </Fragment>
            ))}
          </div>
          <ul
            role="list"
            class="mx-auto mt-8 sm:mt-20 grid max-w-2xl grid-cols-1 gap-6 sm:grid-cols-2 lg:mx-0 lg:max-w-none lg:grid-cols-3 lg:gap-8"
          >
            {images?.map((item, index) => (
              <Fragment key={index}>
                <li class="rounded-2xl bg-gray-800 px-8 py-4">
                  <img
                    src={item?.src?.replace("/public", "")}
                    alt={item?.name}
                    class={`mx-auto h-48 w-48 md:h-56 md:w-56 rounded-full object-cover hover:scale-105 duration-300`}
                    loading="lazy"
                  />
                  {section?.showImgName ? (
                    <div class="mt-6 text-base font-semibold leading-7 tracking-tight text-white text-center">
                      {item?.name.split("_").map((part, index) => (
                        <span>
                          {part}
                          {index < item?.name.split("_").length - 2 && <br />}
                        </span>
                      ))}
                    </div>
                  ) : (
                    ""
                  )}
                </li>
              </Fragment>
            ))}
          </ul>
        </div>
      </div>
    )
  }

  {
    section?.mode === 3 && (
      <div style={`background-color:${section?.bgColor}`}>
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
          <div class="flex flex-col justify-center items-center mx-auto max-w-2xl">
            <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl text-center">
              {section?.title?.map((line: string, index: number) => (
                <Fragment key={index}>
                  <span class="block leading-16">{line}</span>
                </Fragment>
              ))}
            </h2>

            {section?.description?.map((info: string, index: number) => (
              <Fragment key={index}>
                <p class="mt-4 text-lg leading-8 text-gray-600 text-center">
                  {info}
                </p>
              </Fragment>
            ))}
          </div>
          <ul
            role="list"
            class="mx-auto mt-8 grid max-w-2xl grid-cols-1 gap-x-8 gap-y-14 sm:grid-cols-2 lg:mx-0 lg:max-w-none lg:grid-cols-3 xl:grid-cols-4"
          >
            {images?.map((item, index) => (
              <Fragment key={index}>
                <li>
                  <img
                    src={item?.src?.replace("/public", "")}
                    alt={item?.name}
                    class={`aspect-[14/13] w-full rounded-2xl object-cover rounded-${section?.menuItemImgRounded} hover:scale-105 duration-300`}
                    loading="lazy"
                  />
                  {section?.showImgName ? (
                    <div
                      class="mt-6 text-lg leading-8 tracking-tight text-center"
                      style={`color: ${section?.imgNameColor}`}
                    >
                      {item?.name.split("_").map((part, index) => (
                        <span>
                          {part}
                          {index < item?.name.split("_").length - 2 && <br />}
                        </span>
                      ))}
                    </div>
                  ) : (
                    ""
                  )}
                </li>
              </Fragment>
            ))}
          </ul>
        </div>
      </div>
    )
  }
</section>
